version: '3'

# name: chat_hex

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
    environment:
      - GOPATH=/go
      - GO111MODULE=on
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - hex_chat_network

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)


  cassandra-seed:
    build:
      context: ../docker/exp1/cassandra
      dockerfile: Dockerfile
    container_name: cassandra-seed
    ports:
      - "9042:9042"
      - "7199:7199"  # JMX port
      - "9103:9103"  # MCAC metrics port
    networks:
        - hex_chat_network
    restart: unless-stopped
    environment:
      - CASSANDRA_CLUSTER_NAME=Chat Cluster
      - CASSANDRA_USER=admin
      - CASSANDRA_PASSWORD=admin
      - CASSANDRA_SEEDS=cassandra-seed
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-seed
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 5s
      timeout: 10s
      retries: 60
    volumes:
      # - ./cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml
      - cassandra_data_seed:/var/lib/cassandra
  # cassandra-nood1:
  #   build:
  #     context: ./cassandra
  #     dockerfile: Dockerfile
  #   container_name: cassandra-nood1
  #   ports:
  #     - "9142:9042"
  #     - "7299:7199"  # JMX port
  #     - "9104:9103"  # MCAC metrics port
  #   networks:
  #       - hex_chat_network
  #   restart: unless-stopped
  #   environment:
  #     - CASSANDRA_CLUSTER_NAME=Chat Cluster
  #     - CASSANDRA_USER=admin
  #     - CASSANDRA_PASSWORD=admin
  #     - CASSANDRA_SEEDS=cassandra-seed
  #     - CASSANDRA_BROADCAST_ADDRESS=cassandra-seed

  #   healthcheck:
  #     test: ["CMD-SHELL", "nodetool status"]
  #     interval: 5s
  #     timeout: 10s
  #     retries: 60
  #   depends_on:
  #     cassandra-seed:
  #       condition: service_healthy
  #   volumes:
  #     # - ./cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml
  #     - cassandra_data_nood1:/var/lib/cassandra
  # cassandra-nood2:
  #   build:
  #     context: ./cassandra
  #     dockerfile: Dockerfile
  #   container_name: cassandra-nood2
  #   ports:
  #     - "9242:9042"
  #     - "7399:7199"  # JMX port
  #     - "9105:9103"  # MCAC metrics port
  #   networks:
  #       - hex_chat_network
  #   restart: unless-stopped
  #   environment:
  #     - CASSANDRA_CLUSTER_NAME=Chat Cluster
  #     - CASSANDRA_USER=admin
  #     - CASSANDRA_PASSWORD=admin
  #     - CASSANDRA_SEEDS=cassandra-seed
  #     - CASSANDRA_BROADCAST_ADDRESS=cassandra-seed
  #   healthcheck:
  #     test: ["CMD-SHELL", "nodetool status"]
  #     interval: 5s
  #     timeout: 10s
  #     retries: 60
  #   depends_on:
  #     cassandra-nood1:
  #       condition: service_healthy
  #   volumes:
  #     # - ./cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml
  #     - cassandra_data_nood2:/var/lib/cassandra

  # 
  # monitoring and logging visualizing services
  # 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
        - 9090:9090
    networks:
        - hex_chat_network
    restart: unless-stopped
    volumes:
      - ../docker/exp1/prometheus:/etc/prometheus
      - prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    networks:
      - hex_chat_network
    restart: unless-stopped
    volumes:
      - ../docker/exp1/promtail:/etc/promtail
      - logs:/logs
      - /var/log:/var/log #to be changed 
    command: -config.file=/etc/promtail/promtail.yaml
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - hex_chat_network
    restart: unless-stopped
    volumes:
      - ../docker/exp1/loki:/etc/loki
    command: -config.file=/etc/loki/local-config.yaml
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - hex_chat_network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ../docker/exp1/grafana/provisioning/:/etc/grafana/provisioning/


volumes:
  prom_data:
  grafana_data:
  logs:
  cassandra_data_seed:
  cassandra_data_nood1:
  cassandra_data_nood2:

networks:
  hex_chat_network:
    driver: bridge